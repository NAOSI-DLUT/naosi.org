---
import dayjs from "dayjs";
import PlainTextWrapper from "./PlainTextWrapper.astro";
import Tag from "./Tag.astro";
import type { Render } from "astro:content";

interface Props {
  entry: {
    data: {
      title: string;
      date?: Date;
      location?: string;
      tags?: string[];
    };
    slug: string;
    collection: string;
    render(): Render[".md"];
  };
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<div class="my-4">
  <p>
    <a
      class="text-xl text-primary font-bold"
      href={`/${entry.collection}/${entry.slug}`}>{entry.data.title}</a
    >
    {
      entry.data.date && (
        <Tag>
          <span class="i-ri-calendar-event-fill" />
          <span>{dayjs(entry.data.date).format("YYYY-MM-DD HH:mm:ss")}</span>
        </Tag>
      )
    }
    {
      entry.data.location && (
        <Tag>
          <span class="i-ri-map-pin-2-fill" />
          <span>{entry.data.location}</span>
        </Tag>
      )
    }
    {entry.data.tags && entry.data.tags.map((tag) => <Tag>{tag}</Tag>)}
  </p>
  <p class="break-words">
    <PlainTextWrapper limit="200">
      <Content />
    </PlainTextWrapper>
  </p>
</div>
